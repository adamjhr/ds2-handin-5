syntax = "proto3";

option go_package = "https://github.com/adamjhr/ds2-handin-5;auction";

package proto;
// protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative proto/proto.proto

service FrontendToServer
{
    // send message
    rpc FrontendBid (FrontendBidRequest) returns (FrontendAck);

    rpc FrontendResult (FrontendResultRequest) returns (FrontendResultReply);

    rpc FrontendNewAuction (FrontendNewAuctionRequest) returns (FrontendNewAuctionReply);
}

service ClientToFrontend
{
    // send message
    rpc ClientBid (ClientBidRequest) returns (ClientAck);

    rpc ClientResult (ClientResultRequest) returns (ClientResultReply);

    rpc ClientNewAuction (ClientNewAuctionRequest) returns (ClientNewAuctionReply);
}

enum Outcome {
    Success = 0;
    Fail = 1;
    Exception = 2;
}

message FrontendNewAuctionRequest {
    int32 id = 1;
    int32 count = 2;
}

message FrontendNewAuctionReply {
    int32 id = 1;
    int32 count = 2;
    Outcome outcome = 3;
}

message FrontendBidRequest {
    int32 id = 1;
    int32 count = 2;
    int32 amount = 3;
}

message FrontendAck {
    int32 id = 1;
    int32 count = 2;
    Outcome outcome = 3;
}

message FrontendResultRequest {
    int32 id = 1;
    int32 count = 2;
}

message FrontendResultReply {
    int32 id = 1;
    int32 count = 2;
    int32 amount = 3;
    bool isFinished = 4;
}

message ClientNewAuctionRequest {
    int32 id = 1;
}

message ClientNewAuctionReply {
    int32 id = 1;
    Outcome outcome = 2;
}

message ClientResultRequest {
    int32 id = 1;
}

message ClientResultReply {
    int32 id = 1;
    int32 amount = 2;
    bool isFinished = 3;
}

message ClientBidRequest {
    int32 id = 1;
    int32 amount = 2;
}

message ClientAck {
    int32 id = 1;
    Outcome outcome = 2;
}